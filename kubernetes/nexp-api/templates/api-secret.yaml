{{- if eq .Values.cloud "minikube" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.environment }}-{{ .Values.name }}-secret
  namespace: {{ .Values.name }}
type: Opaque
data:
  NODE_ENV: {{ .Values.env.nodeEnv | b64enc | quote }}
  APP_DEFAULT: {{ .Values.env.app.default | b64enc | quote }}
  APP_PATH: {{ .Values.env.app.path | b64enc | quote }}
  APP_PORT: {{ .Values.env.app.port | toString | b64enc | quote }}
  APP_SET_APP_PROXY: {{ .Values.env.app.setAppProxy | toString | b64enc | quote }}
  APP_SET_COOKIE_SECURE: {{ .Values.env.app.setCookieSecure | toString | b64enc | quote }}
  APP_SET_COOKIE_SAME_SITE: {{ .Values.env.app.setCookieSameSite | b64enc | quote }}
  APP_CORS: {{ .Values.env.app.cors | b64enc | quote }}
  DB_URI: {{ .Values.env.database.uri | b64enc | quote }}
  DB_HOST: {{ .Values.env.database.host | b64enc | quote }}
  DB_USER: {{ .Values.env.database.user | b64enc | quote }}
  DB_DATABASE: {{ .Values.env.database.database | b64enc | quote }}
  DB_PASSWORD: {{ .Values.env.database.password | b64enc | quote }}
  DB_PORT: {{ .Values.env.database.port | toString | b64enc | quote }}
  DB_TYPE: {{ .Values.env.database.type | b64enc | quote }}
  DB_ORM_DEFAULT: {{ .Values.env.database.ormDefault | b64enc | quote }}
  CACHE_HOST: {{ .Values.env.cache.host | b64enc | quote }}
  CACHE_PORT: {{ .Values.env.cache.port | toString | b64enc | quote }}
  CACHE_USER: {{ .Values.env.cache.user | b64enc | quote }}
  CACHE_PASSWORD: {{ .Values.env.cache.password | b64enc | quote }}
  CACHE_ENABLE: {{ .Values.env.cache.enable | toString | b64enc | quote }}
  MINIO_HOST: {{ .Values.env.minio.host | b64enc | quote }}
  MINIO_ACCESS_KEY: {{ .Values.env.minio.accessKey | b64enc | quote }}
  MINIO_SECRET_KEY: {{ .Values.env.minio.secretKey | toString | b64enc | quote }}
  MINIO_USE_SSL: {{ .Values.env.minio.useSsl | toString | b64enc | quote }}
  MINIO_PORT: {{ .Values.env.minio.port | toString | b64enc | quote }}
  MINIO_PUBLIC_BUCKET: {{ .Values.env.minio.publicBucket | b64enc | quote }}
  MINIO_PRIVATE_BUCKET: {{ .Values.env.minio.privateBucket | b64enc | quote }}
  MINIO_ROOT_PATH: {{ .Values.env.minio.rootPath | b64enc | quote }}
  MINIO_REGION: {{ .Values.env.minio.region | b64enc | quote }}
  FILESYSTEM_DEFAULT: {{ .Values.env.minio.filesystemDefault | b64enc | quote }}
  TZ: {{ .Values.env.tz | b64enc | quote }}
  AUTH_API_KEY: {{ .Values.env.auth.apiKey | b64enc | quote }}
  AUTH_HOST: {{ .Values.env.auth.host | b64enc | quote }}
  AUTH_SECRET: {{ .Values.env.auth.secret | toString | b64enc | quote }}
  AUTH_AUTHORIZATION: {{ .Values.env.auth.authorization | toString | b64enc | quote }}
  JWT_SECRET: {{ .Values.env.jwt.secret | b64enc | quote }}
  JWT_EXPIRES: {{ .Values.env.jwt.expires | toString | b64enc | quote }}
  JWT_ISS: {{ .Values.env.jwt.iss | b64enc | quote }}
  JWT_AUD: {{ .Values.env.jwt.aud | b64enc | quote }}
  SMTP_HOST: {{ .Values.env.smtp.host | b64enc | quote }}
  SMTP_PORT: {{ .Values.env.smtp.port | toString | b64enc | quote }}
  SMTP_USERNAME: {{ .Values.env.smtp.username | default "" | b64enc | quote }}
  SMTP_PASSWORD: {{ .Values.env.smtp.password | default "" | b64enc | quote }}
  SMTP_SECURE_SSL: {{ .Values.env.smtp.secureSsl | toString | b64enc | quote }}
  SMTP_SENDER_NAME: {{ .Values.env.smtp.senderName | b64enc | quote }}
  SMTP_SENDER_EMAIL_DEFAULT: {{ .Values.env.smtp.senderEmailDefault | b64enc | quote }}
  URL_API: {{ .Values.env.url.api | b64enc | quote }}
  URL_WEB: {{ .Values.env.url.web | b64enc | quote }}
  PRODUCT_NAME: {{ .Values.env.productName | b64enc | quote }}
  ENCRYPTION_DEFAULT: {{ .Values.env.encryptionDefault | b64enc | quote }}
  EXECUTE_CRONS: {{ .Values.env.executeCrons | toString | b64enc | quote }}
  PUSH_PUBLIC_KEY: {{ .Values.env.push.publicKey | b64enc | quote }}
  PUSH_PRIVATE_KEY: {{ .Values.env.push.privateKey | b64enc | quote }}
{{- else if eq .Values.cloud "gcp" }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Values.environment }}-{{ .Values.name }}-secret
  namespace: {{ .Values.namespace }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: google-secret-manager
    kind: ClusterSecretStore
  target:
    name: {{ .Values.environment }}-{{ .Values.name }}-secret
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: {{ .Values.environment }}-{{ .Values.name }}-secret
{{- end }}
